import type { NextPage } from "next";
import Head from "next/head";
import { useContext, useEffect, useState } from "react";
import { Header } from "../components/Header";
import { SearchBar } from "../components/SearchBar";
import { SmallShow } from "../components/SmallShow";
import DataContext from "../contexts/dataContext";
import PageContext from "../contexts/pageContext";

const Movies: NextPage = () => {
  const { movies, filteredResults, updateFilteredResults } = useContext(DataContext);
  const { updateCurrentPage } = useContext(PageContext);

  useEffect(() => {
    updateCurrentPage && updateCurrentPage("movies");
  }, [updateCurrentPage]);

  const [searchText, setSearchText] = useState("");

  function handleSearch(text: string) {
    setSearchText(text.trim());
    updateFilteredResults && updateFilteredResults(text);
  }

  return (
    <>
      <Head>
        <title>Frontend Mentor | Entertainment web app</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Header />
      <main>
        <SearchBar handleSearch={handleSearch} />
        {searchText.length > 0 ? (
          <section className="search-results">
            <h2>
              Found {filteredResults.length} result{filteredResults.length !== 1 && "s"} for ‘{searchText}’
            </h2>
            <div className="recommended-grid">
              {filteredResults.map((show) => (
                <SmallShow show={show} key={show.title} />
              ))}
            </div>
          </section>
        ) : (
          <>
            <section className="recommended-for-you">
              <h2 className="section-heading">Movies</h2>
              <div className="recommended-grid">
                {movies.map((show) => (
                  <SmallShow show={show} key={show.title} />
                ))}
              </div>
            </section>
          </>
        )}
      </main>
    </>
  );
};

export default Movies;
